/*
 * Weather API
 * # Introduction WeatherAPI.com provides access to weather and geo data via a JSON/XML restful API. It allows developers to create desktop, web and mobile applications using this data very easy. We provide following data through our API:     - Real-time weather - 14 day weather forecast - Historical Weather - Marine Weather and Tide Data - Future Weather (Upto 365 days ahead) - Daily and hourly intervals - 15 min interval (Enterprise only) - Astronomy - Time zone - Location data - Sports - Search or Autocomplete API - Weather Alerts - Air Quality Data - Bulk Request  # Getting Started    You need to [signup](https://www.weatherapi.com/signup.aspx) and then you can find your API key under [your account](https://www.weatherapi.com/login.aspx), and start using API right away!  Try our weather API by using interactive [API Explorer](https://www.weatherapi.com/api-explorer.aspx).  We also have SDK for popular framework/languages available on [Github](https://github.com/weatherapicom/) for quick integrations.  If you find any features missing or have any suggestions, please [contact us](https://www.weatherapi.com/contact.aspx).    # Authentication    API access to the data is protected by an API key. If at anytime, you find the API key has become vulnerable, please regenerate the key using Regenerate button next to the API key.    Authentication to the WeatherAPI.com API is provided by passing your API key as request parameter through an API .      ##  key parameter  key=YOUR API KEY
 *
 * OpenAPI spec version: 1.0.2
 *
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.integrations.weather.model;

import com.fasterxml.jackson.annotation.JsonProperty;

import java.util.Objects;

/**
 * ForecastAstro
 */
public class ForecastAstro {
  @JsonProperty("sunrise")
  private String sunrise = null;

  @JsonProperty("sunset")
  private String sunset = null;

  @JsonProperty("moonrise")
  private String moonrise = null;

  @JsonProperty("moonset")
  private String moonset = null;

  @JsonProperty("moon_phase")
  private String moonPhase = null;

  @JsonProperty("moon_illumination")
  private String moonIllumination = null;

  public ForecastAstro sunrise(String sunrise) {
    this.sunrise = sunrise;
    return this;
  }

  /**
   * Get sunrise
   * @return sunrise
   **/
  public String getSunrise() {
    return this.sunrise;
  }

  public void setSunrise(String sunrise) {
    this.sunrise = sunrise;
  }

  public ForecastAstro sunset(String sunset) {
    this.sunset = sunset;
    return this;
  }

  /**
   * Get sunset
   * @return sunset
   **/
  public String getSunset() {
    return this.sunset;
  }

  public void setSunset(String sunset) {
    this.sunset = sunset;
  }

  public ForecastAstro moonrise(String moonrise) {
    this.moonrise = moonrise;
    return this;
  }

  /**
   * Get moonrise
   * @return moonrise
   **/
  public String getMoonrise() {
    return this.moonrise;
  }

  public void setMoonrise(String moonrise) {
    this.moonrise = moonrise;
  }

  public ForecastAstro moonset(String moonset) {
    this.moonset = moonset;
    return this;
  }

  /**
   * Get moonset
   * @return moonset
   **/
  public String getMoonset() {
    return this.moonset;
  }

  public void setMoonset(String moonset) {
    this.moonset = moonset;
  }

  public ForecastAstro moonPhase(String moonPhase) {
    this.moonPhase = moonPhase;
    return this;
  }

  /**
   * Get moonPhase
   * @return moonPhase
   **/
  public String getMoonPhase() {
    return this.moonPhase;
  }

  public void setMoonPhase(String moonPhase) {
    this.moonPhase = moonPhase;
  }

  public ForecastAstro moonIllumination(String moonIllumination) {
    this.moonIllumination = moonIllumination;
    return this;
  }

  /**
   * Get moonIllumination
   * @return moonIllumination
   **/
  public String getMoonIllumination() {
    return this.moonIllumination;
  }

  public void setMoonIllumination(String moonIllumination) {
    this.moonIllumination = moonIllumination;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || this.getClass() != o.getClass()) {
      return false;
    }
    ForecastAstro forecastAstro = (ForecastAstro) o;
    return Objects.equals(this.sunrise, forecastAstro.sunrise) &&
        Objects.equals(this.sunset, forecastAstro.sunset) &&
        Objects.equals(this.moonrise, forecastAstro.moonrise) &&
        Objects.equals(this.moonset, forecastAstro.moonset) &&
        Objects.equals(this.moonPhase, forecastAstro.moonPhase) &&
        Objects.equals(this.moonIllumination, forecastAstro.moonIllumination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(this.sunrise, this.sunset, this.moonrise, this.moonset, this.moonPhase, this.moonIllumination);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ForecastAstro {\n");

    sb.append("    sunrise: ").append(this.toIndentedString(this.sunrise)).append("\n");
    sb.append("    sunset: ").append(this.toIndentedString(this.sunset)).append("\n");
    sb.append("    moonrise: ").append(this.toIndentedString(this.moonrise)).append("\n");
    sb.append("    moonset: ").append(this.toIndentedString(this.moonset)).append("\n");
    sb.append("    moonPhase: ").append(this.toIndentedString(this.moonPhase)).append("\n");
    sb.append("    moonIllumination: ").append(this.toIndentedString(this.moonIllumination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

